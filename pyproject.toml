[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "ninja",
    "cmake>=3.26.1",
    "pybind11[global]>=2.10.4"
]
build-backend = "setuptools.build_meta"


[tool.cibuildwheel]
build = "*"
skip = "*musllinux* pp* *i686* *aarch64* *ppc64le* *s390x*"
test-skip = ""

archs = ["auto"]
build-frontend = "pip"
config-settings = {}
dependency-versions = "pinned"
environment = {}
environment-pass = []
build-verbosity = ""

before-all = "yum -y install zip curl perl-core zlib-devel unzip tar"  # dnf install -y zip curl perl-core zlib-devel
before-build = "rm -rf build"
repair-wheel-command = ""

test-command = ""
before-test = ""
test-requires = []
test-extras = []

container-engine = "docker"

manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
manylinux-ppc64le-image = "manylinux2014"
manylinux-s390x-image = "manylinux2014"
manylinux-pypy_x86_64-image = "manylinux2014"
manylinux-pypy_i686-image = "manylinux2014"
manylinux-pypy_aarch64-image = "manylinux2014"

musllinux-x86_64-image = "musllinux_1_1"
musllinux-i686-image = "musllinux_1_1"
musllinux-aarch64-image = "musllinux_1_1"
musllinux-ppc64le-image = "musllinux_1_1"
musllinux-s390x-image = "musllinux_1_1"


[tool.cibuildwheel.linux]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"

[tool.cibuildwheel.windows]
