name: Build Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]  # , windows-2019, macOS-11

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.12.1

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      - name: Set release name
        run: |
          echo "RELEASE_NAME=$(date +'%Y.%m.%d-%H:%M-Release')" >> $GITHUB_ENV

      - name: Set release tag
        run: |
          echo "RELEASE_TAG=$(date +'%Y.%m.%d-%H.%M-Release')" >> $GITHUB_ENV


      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: false

      - name: List wheel files
        run: |
          WHEEL_FILES="$(ls wheelhouse/*.whl | tr '\n' ' ')"
          echo "WHEEL_FILES=$WHEEL_FILES" >> $GITHUB_ENV


      - name: Upload wheels to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for wheel_file in $WHEEL_FILES; do
            echo "Uploading $wheel_file"
            curl \
              --progress-bar \
              --location \
              --request POST \
              --header "Authorization: Bearer $GITHUB_TOKEN" \
              --header "Content-Type:application/octet-stream" \
              --data-binary "@$wheel_file" \
              --url "${{ steps.create_release.outputs.upload_url }}?name=$(basename $wheel_file)"
          done