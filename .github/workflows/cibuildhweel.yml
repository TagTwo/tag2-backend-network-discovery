name: Build Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]  # , macos-latest, windows-latest
        python-version: ["3.8"]  # , "3.9", "3.10", "3.11"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}


      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:

          CIBW_SKIP: "*-win32 *-manylinux_i686"
          CIBW_PLATFORM: linux
          CIBW_ENVIRONMENT_LINUX: >
            CIBW_MANYLINUX_X86_64_IMAGE=manylinux2014
            CIBW_PLATFORM=linux

          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014 #manylinux_2_28
          CIBW_BEFORE_ALL: >
            if [ "$CIBW_PLATFORM" == "linux" ]; then
              dnf install -y zip curl perl-core zlib-devel || true
              yum -y install zip curl perl-core zlib-devel unzip tar || true
            elif [ "$CIBW_PLATFORM" == "macos" ]; then
              brew update
              brew install zip curl perl zlib
            elif [ "$CIBW_PLATFORM" == "windows" ]; then
              choco install zip curl perl zlib
            fi


      - name: Zip wheels
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          cd wheelhouse
          zip -r ../${{ matrix.os }}-wheel.zip ./*

      - name: Create GitHub Release
        id: create_release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload wheels to GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wheelhouse/${{ matrix.os }}-wheel.zip
          asset_name: ${{ matrix.os }}-wheel.zip
          asset_content_type: application/zip
